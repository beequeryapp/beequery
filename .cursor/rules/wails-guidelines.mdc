---
description: Wails-specific development guidelines and patterns
globs: ["apps/desktop/**/*.go", "apps/desktop/**/*.tsx", "apps/desktop/**/*.ts"]
alwaysApply: true
---

# Wails-Specific Guidelines

## Go Backend Commands

-   Keep Go methods focused and single-purpose
-   Use proper error handling with Go's error interface
-   Implement async operations for database interactions
-   Use Wails context for shared resources and dependency injection

## Frontend-Backend Communication

-   Use generated Wails bindings for calling Go methods
-   Import from `../wailsjs/go/main/App` for backend methods
-   Implement proper loading states for async operations
-   Handle errors gracefully with user-friendly messages
-   Use Wails runtime for system events and notifications

## Security

-   Never log sensitive database credentials
-   Use parameterized queries to prevent SQL injection
-   Implement connection timeout and retry logic
-   Encrypt stored connection configurations
-   Use Wails secure storage and context APIs
-   Validate all user inputs

## Performance

-   Implement virtual scrolling for large result sets
-   Use React.memo and useMemo for expensive computations
-   Lazy load components and features
-   Optimize bundle size with dynamic imports

## Documentation & Learning

-   Use Context7 MCP server for up-to-date Wails documentation and examples
-   Reference Wails official documentation for Go backend patterns
-   For database integration, use Go's standard database/sql package
-   Leverage Wails runtime features for desktop integration
